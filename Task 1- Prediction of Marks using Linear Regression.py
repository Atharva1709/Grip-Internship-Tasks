# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11vlYRtpZ3TkELnBtAaRSllMyV7i3IMRT

# **Task 1: Prediction using Supervised Machine Learning**

## Predicting the Percentage of a Student based on the Number of study hours

Atharva Wankhede

Supervised Machine Learning : Supervised learning is the types of machine learning in which machines are trained using well "labelled" training data, and on basis of that data, machines predict the output. The labelled data means some input data is already tagged with the correct output.

Linear Regression:
linear regression is a linear approach to modelling the relationship between  dependent and independent variable
**y=b0+b1*x1**
y->dependent variable
b0-> constant 
b1->coefficiant 
x1->independent variable
"""

import pandas as pd 
import numpy as np

url="http://bit.ly/w-data"
data=pd.read_csv(url)

data.head()

data.describe()

data.shape

"""**Importing Data Visualization Libraries bold text**"""

import matplotlib.pyplot as plt
import seaborn as sns

sns.scatterplot(x="Hours",y="Scores",data=data)

data.corr(method="pearson")

"""**Data Preparation**"""

from sklearn.model_selection import train_test_split

#dividing dataset into attributes and Labels
x=np.array(data["Hours"]).reshape(-1,1)
y=np.array(data["Scores"])

#dividing training and testing data
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)

"""**Training Model**"""

from sklearn.linear_model import LinearRegression

score=LinearRegression()
score.fit(x_train,y_train)

print(score.coef_)

print(score.intercept_)

"""**Regression Graph**"""

regline=(score.coef_*x)+(score.intercept_)
plt.scatter(x,y)
plt.xlabel("Hours")
plt.ylabel("Scores")
plt.plot(x,regline)
plt.show()

y_prediction=score.predict(x_test)
df=pd.DataFrame({"Actual":y_test,"Predicted":y_prediction})
print(df)

"""#**Problem Statement**

What will be the predicted score of student who studied 9.25 hrs/day?

**Solution**
"""

hour=[[9.25]]
p_score=score.predict(hour)
print("If study hours are 9.25, then percentage scored is: ")
print(p_score)

"""**Accuracy of Prediction**"""

accuracy=score.score(x_test,y_test)
print("The accuracy of applied model is ",accuracy*100)

